{"is_source_file": true, "format": "TypeScript", "description": "This file defines an Angular service called NotesService, responsible for managing notes data including creation, retrieval, updating, deletion, and search functionalities. It uses RxJS BehaviorSubject to emit note list changes.", "external_files": ["../models/note"], "external_methods": [], "published": ["NotesService"], "classes": [{"name": "NotesService", "description": "Angular service to manage notes data with reactive updates."}], "methods": [{"name": "getNotes", "description": "Returns an observable stream of the current notes list."}, {"name": "addNote", "description": "Adds a new note to the notes list and updates the observable."}, {"name": "updateNote", "description": "Updates an existing note identified by id with new data."}, {"name": "deleteNote", "description": "Removes a note identified by id from the list."}, {"name": "searchNotes", "description": "Filters notes based on a query string, updating the observable with search results."}], "calls": ["this.notesSubject.asObservable()", "this.notesSubject.next()", "this.notes.findIndex()", "this.notes.filter()"], "search-terms": ["Angular", "NotesService", "RxJS BehaviorSubject", "note management", "Angular service"], "state": 2, "file_id": 22, "knowledge_revision": 45, "git_revision": "", "ctags": [{"_type": "tag", "name": "NotesService", "path": "/home/kavia/workspace/code-generation/note-management-system-158104-158117/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^export class NotesService {$/", "language": "TypeScript", "kind": "class"}, {"_type": "tag", "name": "filteredNotes", "path": "/home/kavia/workspace/code-generation/note-management-system-158104-158117/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^    const filteredNotes = this.notes.filter(note =>$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "index", "path": "/home/kavia/workspace/code-generation/note-management-system-158104-158117/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^    const index = this.notes.findIndex(note => note.id === id);$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "newNote", "path": "/home/kavia/workspace/code-generation/note-management-system-158104-158117/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^    const newNote: Note = {$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "notes", "path": "/home/kavia/workspace/code-generation/note-management-system-158104-158117/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^  private notes: Note[] = [];$/", "language": "TypeScript", "kind": "property", "scope": "NotesService", "scopeKind": "class"}, {"_type": "tag", "name": "notesSubject", "path": "/home/kavia/workspace/code-generation/note-management-system-158104-158117/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^  private notesSubject = new BehaviorSubject<Note[]>([]);$/", "language": "TypeScript", "kind": "property", "scope": "NotesService", "scopeKind": "class"}], "hash": "37f67846a3af6a0571f1607b2e7a1c91", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/src/app/services/notes.service.ts", "fields": [{"name": "private notes: Note[] = [];", "scope": "NotesService", "scopeKind": "class", "description": "unavailable"}, {"name": "private notesSubject = new BehaviorSubject<Note[]>([]);", "scope": "NotesService", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"45": ""}]}